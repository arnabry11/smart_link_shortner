#!/usr/bin/env ruby

require "fileutils"

HOOKS_DIR = File.expand_path("../hooks", __dir__)
GIT_HOOKS_DIR = File.expand_path("../.git/hooks", __dir__)

def setup_hooks
  puts "Setting up Git hooks..."

  unless Dir.exist?(HOOKS_DIR)
    puts "‚ùå Error: hooks directory not found at #{HOOKS_DIR}"
    puts "Please run this script from the project root."
    exit 1
  end

  unless Dir.exist?(GIT_HOOKS_DIR)
    puts "‚ùå Error: .git/hooks directory not found."
    puts "Are you in a git repository?"
    exit 1
  end

  Dir.glob("#{HOOKS_DIR}/*").each do |hook_template|
    next unless File.file?(hook_template)

    hook_name = File.basename(hook_template)
    hook_target = File.join(GIT_HOOKS_DIR, hook_name)

    # Copy the hook
    FileUtils.cp(hook_template, hook_target)

    # Make it executable
    FileUtils.chmod(0755, hook_target)

    puts "‚úÖ Installed #{hook_name} hook"
  end

  puts "üéâ Git hooks setup complete!"
  puts "The following hooks are now active:"
  Dir.glob("#{HOOKS_DIR}/*").each do |hook|
    puts "  - #{File.basename(hook)}"
  end
end

if __FILE__ == $0
  setup_hooks
end
