#!/usr/bin/env ruby

require "fileutils"

HOOKS_DIR = File.expand_path("../hooks", __dir__)
GIT_HOOKS_DIR = File.expand_path("../.git/hooks", __dir__)

def setup_hooks
  puts "Setting up Git hooks..."

  unless Dir.exist?(GIT_HOOKS_DIR)
    puts "‚ùå Error: .git/hooks directory not found."
    puts "Are you in a git repository?"
    exit 1
  end

  # Check if pre-commit is installed
  pre_commit_available = system("command -v pre-commit >/dev/null 2>&1")

  if pre_commit_available
    puts "‚úÖ pre-commit is already installed"
  else
    puts "üì¶ Installing pre-commit..."

    # Try different installation methods
    installed = false

    # Try pip first
    if system("pip install pre-commit 2>/dev/null")
      installed = true
    # Try pip3
    elsif system("pip3 install pre-commit 2>/dev/null")
      installed = true
    # Try brew on macOS
    elsif system("which brew >/dev/null 2>&1 && brew install pre-commit")
      installed = true
    end

    unless installed
      puts "‚ùå Failed to install pre-commit automatically."
      puts "Please install it manually using one of these methods:"
      puts "  - pip install pre-commit"
      puts "  - pip3 install pre-commit"
      puts "  - brew install pre-commit (macOS)"
      puts "  - conda install -c conda-forge pre-commit (Conda)"
      puts ""
      puts "After installing, re-run this script."
      exit 1
    end

    puts "‚úÖ pre-commit installed successfully"
  end

  # Install pre-commit hooks
  puts "üîó Installing pre-commit hooks..."
  unless system("pre-commit install")
    puts "‚ùå Failed to install pre-commit hooks."
    puts "You can install them manually with: pre-commit install"
    exit 1
  end

  # Install pre-push hooks (our custom ones)
  if Dir.exist?(HOOKS_DIR)
    Dir.glob("#{HOOKS_DIR}/*").each do |hook_template|
      next unless File.file?(hook_template)

      hook_name = File.basename(hook_template)
      hook_target = File.join(GIT_HOOKS_DIR, hook_name)

      # Copy the hook
      FileUtils.cp(hook_template, hook_target)

      # Make it executable
      FileUtils.chmod(0755, hook_target)

      puts "‚úÖ Installed #{hook_name} hook"
    end
  end

  puts "üéâ Git hooks setup complete!"
  puts "The following hooks are now active:"
  puts "  - Pre-commit hooks (via pre-commit framework):"
  puts "    - trailing-whitespace"
  puts "    - end-of-file-fixer"
  puts "    - rubocop"
  puts "    - rspec"
  puts "  - Custom hooks:"
  if Dir.exist?(HOOKS_DIR)
    Dir.glob("#{HOOKS_DIR}/*").each do |hook|
      puts "    - #{File.basename(hook)}"
    end
  end
end

if __FILE__ == $0
  setup_hooks
end
