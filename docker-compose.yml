services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - .:/rails:cached
    ports:
      - "3000:3000"
    environment:
      - RAILS_ENV=development
      - DATABASE_URL=postgres://postgres:password@db:5432/smart_link_shortner_development
      - REDIS_URL=redis://redis:6379/1
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      sidekiq:
        condition: service_started
    stdin_open: true
    tty: true
    command: ./bin/rails server -b 0.0.0.0 -p 3000

  sidekiq:
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - .:/rails:cached
    environment:
      - RAILS_ENV=development
      - DATABASE_URL=postgres://postgres:password@db:5432/smart_link_shortner_development
      - REDIS_URL=redis://redis:6379/1
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: bundle exec sidekiq -C config/sidekiq.yml

  db:
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=smart_link_shortner_development
    ports:
      - "6003:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:
